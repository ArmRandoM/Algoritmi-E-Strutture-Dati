#include <sstream>
#include <iostream>
#include <string>
#include "AlberoB.h"

using namespace std;

AlberoB<int> ricercaPerLivelli( AlberoB<int> Albero_Binario, int valore )
	{
		if( !Albero_Binario.nullo())
			{
				if(Albero_Binario.radice() == valore)
					return Albero_Binario.padre();
				ricercaPerLivelli(Albero_Binario.estraiFiglio(SIN), valore);
				ricercaPerLivelli(Albero_Binario.estraiFiglio(DES), valore);
			}
	}

void stampa( AlberoB<int> Albero_Binario )
	{
		if( !Albero_Binario.nullo())
			{
				cout << Albero_Binario.radice();
				// if( !(Albero_Binario.estraiFiglio(SIN).nullo()))
	      stampa(Albero_Binario.estraiFiglio(SIN));
				// else if( !(Albero_Binario.estraiFiglio(DES).nullo()))
				// stampa(Albero_Binario.estraiFiglio(DES));
			}
		cout << "Albero Vuoto" << endl;
	}

int main()
{
  bool radice = true;
  string comando;
  int valore1;
  int valore2;
  AlberoB<int> Albero_Binario(0);
  char Direzione;

  while(getline( cin, comando))
    {
      if( comando == "-1")
        break;

      //definizione del valore della radice
      if( radice )
        {
          stringstream primo_valore( comando );
          primo_valore >> valore1;
          Albero_Binario.modRadice(valore1);
          radice = false;
          continue;
        }

      //definizione del valore dei figli e delle posizioni
	    size_t Posizione_Due_Punti = comando.find(':');
	    size_t Posizione_Dello_Spazio = comando.find(' ');
	    istringstream figlio(comando.substr(0, Posizione_Due_Punti));	//prendo il valore del figlio
	    figlio >> valore1;
	    istringstream padre(comando.substr(Posizione_Due_Punti + 1, Posizione_Dello_Spazio - Posizione_Due_Punti)); 	// prendo il valore del padre
	    padre >> valore2;
      Direzione = comando.at(Posizione_Dello_Spazio + 1); // prendo la direzione

      AlberoB<int> Puntatore_Temp = ricercaPerLivelli(Albero_Binario, valore2);

   	  if (Puntatore_Temp.nullo())
       {
   		     cout << "Errore! Nodo padre inesistente" << endl;
   		     return 1;
   	   }

   	 	AlberoB<int> Puntatore_Figlio(valore1);
   	  if (Direzione == 's')
   	 		Puntatore_Temp.insFiglio(SIN, Puntatore_Figlio);
   	 	else
    		Puntatore_Temp.insFiglio(DES, Puntatore_Figlio);
    }

  stampa(Albero_Binario);

  return 0;
}
